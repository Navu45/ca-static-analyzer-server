plugins {
    id 'org.springframework.boot' version '2.6.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'antlr'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'junit:junit:4.13.1'
    implementation 'org.postgresql:postgresql:42.2.19'
    antlr  'org.antlr:antlr4:4.7.1'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}

generateGrammarSource {
    maxHeapSize = "128m"
    outputDirectory(file("${buildDir}/generated-src/antlrGenerated/"))
    arguments += ["-package", "com.example.castaticanalyzer.analyzer.antlrGenerated", "-visitor", "-long-messages"]
    doLast {
       ant.move file: "${buildDir}/generated-src/antlrGenerated/",
                todir: "src/main/java/com/example/castaticanalyzer/analyzer/"
    }
}

