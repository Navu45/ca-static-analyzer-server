plugins {
    id 'org.springframework.boot' version '2.6.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'antlr'
}

group = 'com.example.castaticanalyzer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter:2.5.5'
    implementation 'org.projectlombok:lombok:1.18.20'
    implementation 'org.testng:testng:7.1.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "org.springframework.boot:spring-boot-starter-security"
    testImplementation "org.springframework.security:spring-security-test"
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.4.5'
    antlr  'org.antlr:antlr4:4.7.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation  'commons-beanutils:commons-beanutils:1.9.4'
}

test {
    useJUnitPlatform()
}

generateGrammarSource {
    maxHeapSize = "128m"
    outputDirectory(file("${buildDir}/generated-src/antlrGenerated/"))
    arguments += ["-package", "com.example.castaticanalyzer.analyzer.antlrGenerated", "-visitor", "-long-messages"]
    doLast {
       ant.move file: "${buildDir}/generated-src/antlrGenerated/",
                todir: "src/main/java/com/example/castaticanalyzer/analyzer/"
    }
}

